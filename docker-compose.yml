version: '2.1'
services:
  config-server:
    build: config-server
    mem_limit: 512m
    ports:
      - "9097:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  eureka-server:
    build: eureka-server
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eureka-server:8761" ]
      interval: 30s
      timeout: 10s
      retries: 5
    mem_limit: 512m
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      config-server:
        condition: service_started

  gateway-service:
    build: gateway-service
    mem_limit: 512m
    ports:
      - "8090:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_healthy
      composite-service:
        condition: service_started

  account-service:
    build: account-service
    mem_limit: 512m
    ports:
      - "9098:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodocker:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started

  movements-service:
    build: movements-service
    mem_limit: 512m
    ports:
      - "9095:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodocker:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_healthy

  customer-service:
    build: customer-service
    mem_limit: 512m
    ports:
      - "9091:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodocker:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_healthy

  product-service:
    build: product-service
    mem_limit: 512m
    ports:
      - "9093:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodocker:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_healthy

  credit-service:
    build: credit-service
    mem_limit: 512m
    ports:
      - "9094:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodocker:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_healthy

  composite-service:
    build: composite-service
    mem_limit: 512m
    ports:
      - "9096:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodocker:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_healthy
      account-service:
        condition: service_started
      movements-service:
        condition: service_started
      customer-service:
        condition: service_started
      kafka:
        condition: service_started

  mongodocker:
    image: mongo:4.4.2
    mem_limit: 512m
    ports:
      - "27018:27017"
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 5s
      timeout: 2s
      retries: 60

  redisdocker:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6378:6379"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ZK_SERVER: zookeeper:2181
      ADVERTISED_HOST: kafka
      CONSUMER_THREADS: 5
      BROKER_ID: 1
      ADVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock