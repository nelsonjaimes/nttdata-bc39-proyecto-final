spring:
  application:
    name: customer-service
  cache:
    type: redis
  redis:
    host: localhost
    port: 6379
  cloud:
    config:
      enabled: true
      label: master
      uri: http://localhost:9097
      #fail-fast: true
      #retry:
      #  initial-interval: 1500
      #  multiplier: 1.5
      #  max-attempts: 10000
      #  max-interval: 1000
#Eureka
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
#Mongo db
spring.data.mongodb.database: customer-db
spring.data.mongodb.host: localhost
spring.data.mongodb.port: 27017
spring.data.mongodb.uri: mongodb://localhost/customer-db
spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

---
spring.config.activate.on-profile: docker
server.port: 8080
spring:
  cache:
    type: redis
  redis:
    host: redisdocker
    port: 6379
  cloud:
    config:
      enabled: true
      label: master
      uri: http://config-server
#eureka
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eureka-server:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.data.mongodb.host: mongodocker
spring.data.mongodb.uri: mongodb://mongodocker/customer-db